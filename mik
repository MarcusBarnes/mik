#!/usr/bin/env php
<?php
// mik.php
/**
 * Main Move to Islandora Kit script.
 **/

// Use composer to load vendor and project classes.
require 'vendor/autoload.php';

// Get command line options.
// Assumes --longopts.
// Required --config path/to/config/ini_file
// Optional --limit=10 (the number of input objects to proces)
// If no --limit is provided, process all input objects from the source.
$options = getopt('', array('config:', 'limit::'));

$configPath = $options['config'];
if (!file_exists($options['config'])) {
    exit("Sorry, can't find " . $options['config'] . "\n");
}

if (isset($options['limit'])) {
    $limit = $options['limit'];
}
else {
    $limit = null;
}

// Configure
use mik\config\Config;

$mikConfig = new Config($configPath);
$settings = $mikConfig->settings;

// Fetch metadata records.
$fetcherClass = 'mik\\fetchers\\' . $settings['FETCHER']['class'];
$fetcher = new $fetcherClass($settings);
$numRecs = $fetcher->getNumRecs();

// Instantiate fileGetter class.
echo "Getting file information.\n";
echo "Please be patient as this may take some time.\n";

// File getters determine what files are associated with a metadata record.
$fileGetterClass = 'mik\\filegetters\\' . $settings['FILE_GETTER']['class'];
$fileGetter = new $fileGetterClass($settings);

// Create and Export Islandora ingest packages.
foreach ($fetcher->getRecords($limit)->records as $record) {
      $record_key = $record->key;
      if (strlen($record_key) == 0) {
          continue;
      }

      // The metadata parser returns an XML file that can be passed on to
      // the metadata manipulater.
      $metadtaClass = 'mik\\metadataparsers\\' . $settings['METADATA_PARSER']['class'];
      $parser = new $metadtaClass($settings);
      echo $parser->echoPhrase("The $metadtaClass class been loaded for record $record_key.\n");
      $metadata = $parser->metadata($record_key) . "\n";
      echo "The metatdata file for record $record_key has been created.\n";

      // The metadata manipulater will return an XML file or DOM object that can be passed on to writer.
      // Classes are loaded in metadata parsers.

      $children = $fileGetter->getChildren($record_key);

      // File manipulators modify or create files needed for the ingest packages
      // that aren't available from the input source. Classes are loaded in file getters.

      // The writer writes metadata XML files and associated content files (files retrieved,
      // modfied, or generated by the file getters and manipulaters) to their output location.
      $writerClass = 'mik\\writers\\' . $settings['WRITER']['class'];
      $writer = new $writerClass($settings);
      $writer->writePackages($metadata, $children, $record_key);
}
